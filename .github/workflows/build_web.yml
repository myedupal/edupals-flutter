name: build docker image

on: 
  workflow_call:
    inputs:
      environment:
        type: string
        description: environment to deploy to
        required: true
    secrets:
      env_file:
        required: true
    outputs:
      image_digest:
        description: Docker image digest
        value: ${{ jobs.build.outputs.image_digest }}  

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    outputs:
      image_digest: ${{ steps.build-and-push.outputs.digest }}

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.6'
          cache: true
      
      - name: Create env file
        run: |
          rm -f .env.prod
          rm -f .env.dev
          touch .env.prod
          touch .env.dev
          touch .env.uat

      - name: Include env file
        run: echo "${{ secrets.env_file }}" >> .env.${{ inputs.environment == 'staging' && 'dev' || 'prod' }} 

      - name: Clear cache
        run: flutter clean

      - name: Install dependencies
        run: flutter pub get
      
      # - name: Run tests
      #   run: flutter test
      
      - name: Build web
        run: flutter build web -t lib/main_${{ inputs.environment == 'staging' && 'dev' || 'prod' }}.dart
        
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry 
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        # if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
