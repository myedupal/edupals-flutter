name: deploy staging app

on: 
  push:
    branches: [ staging ]

env:
  APP_NAME: ${{ github.event.repository.name }}-staging
  IMAGE_REPO: ghcr.io/${{ github.repository }}
  EXPOSED_PORT: '80'
  COMMENT_MESSAGE: 'Successfully deployed to [${{ github.event.repository.name }}-staging.${{vars.DOKKU_HOST}}](https://${{ github.event.repository.name }}-staging.${{vars.DOKKU_HOST}})! :rocket:'

jobs:
  test:
    uses: ./.github/workflows/ci_test.yml
    secrets: 
      env_file: |
        API_URL=${{ secrets.STAGING_API_URL }}
    with:
      environment: staging
    
  build:
    uses: ./.github/workflows/build_web.yml
    secrets: 
      env_file: |
        API_URL=${{ secrets.STAGING_API_URL }}
    with:
      environment: staging

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - name: Rebuild Review Apps
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: root@${{ vars.DOKKU_HOST }}
          privateKey: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
          command: |
            if dokku apps:exists ${{ env.APP_NAME }};
            then 
              dokku git:from-image ${{ env.APP_NAME }} ${{ env.IMAGE_REPO }}@${{ needs.build.outputs.image_digest }};
            else 
              dokku apps:create ${{ env.APP_NAME }};
              dokku domains:set ${{ env.APP_NAME }} ${{ env.APP_NAME }}.${{ vars.DOKKU_HOST }};
              dokku letsencrypt:enable ${{ env.APP_NAME }};
              dokku proxy:ports-set ${{ env.APP_NAME }} http:80:${{ env.EXPOSED_PORT }} https:443:${{ env.EXPOSED_PORT }};
              dokku git:from-image ${{ env.APP_NAME }} ${{ env.IMAGE_REPO }}@${{ needs.build.outputs.image_digest }};
            fi
      - name: Comment commit
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            ${{ env.COMMENT_MESSAGE }}
  